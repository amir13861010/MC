{
    "openapi": "3.0.0",
    "info": {
        "title": "Voucher API Documentation",
        "description": "API documentation for Voucher Management System",
        "contact": {
            "email": "admin@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/api/admin/profile": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update admin profile",
                "description": "Update admin username and/or password",
                "operationId": "updateAdminProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "new_admin"
                                    },
                                    "current_password": {
                                        "type": "string",
                                        "example": "Admin@123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "NewPass@123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "NewPass@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Admin updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admin updated successfully"
                                        },
                                        "admin": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "new_admin"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "username": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The username has already been taken."
                                                    }
                                                },
                                                "current_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The current password is incorrect."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password must contain at least one uppercase letter, one lowercase letter, one number and one special character."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/enable-2fa": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Enable two-factor authentication for a user",
                "description": "Set two factor secret and enable 2FA for a user",
                "operationId": "enableTwoFactor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC-000123"
                                    },
                                    "two_factor_secret": {
                                        "type": "string",
                                        "example": "SECRET123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Two factor authentication enabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two factor authentication enabled"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "example": "MC-000123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/disable-2fa": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Disable two-factor authentication for a user",
                "description": "Disable 2FA for a user by clearing the secret and disabling the flag",
                "operationId": "disableTwoFactor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC-000123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Two factor authentication disabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two factor authentication disabled"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "example": "MC-000123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/change-password": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Change user password by verifying old password",
                "description": "Change user password by verifying old password",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC-000123"
                                    },
                                    "old_password": {
                                        "type": "string",
                                        "example": "OldPass123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "NewPass456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "example": "MC-000123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Old password is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/user-stats": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get user statistics",
                "description": "Returns total user count and sum of gain_profit, capital_profit, and deposit_balance for all users.",
                "operationId": "getUserStats",
                "responses": {
                    "200": {
                        "description": "User statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_users": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "total_gain_profit": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 12345.67
                                        },
                                        "total_capital_profit": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 23456.78
                                        },
                                        "total_deposit_balance": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 34567.89
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vouchers": {
            "get": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Get list of vouchers",
                "operationId": "2246b623ce7a9d5bd2220612b816d781",
                "responses": {
                    "200": {
                        "description": "List of vouchers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Create a new voucher",
                "operationId": "0a474a047c834069873a53dddad25a9a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "user_id"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Voucher created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Voucher created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or insufficient balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vouchers/{id}": {
            "get": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Get voucher details",
                "operationId": "734100359714d9ba10b1e59978d488dc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Voucher ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voucher details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Voucher not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Update voucher",
                "operationId": "a3539251e17d483bc69ad8a86197bca5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Voucher ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "gainprofit",
                                    "amount",
                                    "user_id",
                                    "status"
                                ],
                                "properties": {
                                    "gainprofit": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Voucher updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Voucher updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Delete voucher",
                "operationId": "173dfc59a6e61236e8e2512db33064c4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Voucher ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voucher deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Voucher deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vouchers/user/{user_id}": {
            "get": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Get vouchers by user ID",
                "operationId": "41563904c556a59ddeed5604170bc30b",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vouchers for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vouchers/code/{code}": {
            "get": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Get voucher by code",
                "operationId": "9ba770c461b584bcc8883cac8b898b8c",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Voucher unique code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ABC123XYZ"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voucher details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Voucher not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vouchers/redeem": {
            "post": {
                "tags": [
                    "Vouchers"
                ],
                "summary": "Redeem a voucher by code",
                "description": "Redeem a voucher by code",
                "operationId": "dfa694afe2310342131cc6f62ae2229e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "ABC123XYZ"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Voucher redeemed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Voucher redeemed successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Voucher not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Voucher is not active",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "description": "Login user with username (MC-XXXXXX) and password",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "MC34234"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "a1b2c3d4"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "MC342345"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+989123456789"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Iran"
                                                },
                                                "deposit_balance": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1000
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/decode-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Decode JWT token",
                "description": "Decode JWT token and return user_id, expiration, and active status",
                "operationId": "decodeToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Decoded token info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "string",
                                            "example": "MC34234"
                                        },
                                        "exp": {
                                            "type": "integer",
                                            "example": 1717267200
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/unsuspend": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Unsuspend user",
                "description": "Unsuspend a user by user_id (MC-XXXXXX)",
                "operationId": "unsuspendUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC34234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User unsuspended successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User unsuspended successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/sign-up": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Register a new user with optional voucher code and friend ID",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "phone",
                                    "country"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+989123456789"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Iran"
                                    },
                                    "voucher_id": {
                                        "type": "string",
                                        "example": "ABC123",
                                        "nullable": true
                                    },
                                    "friend_id": {
                                        "type": "string",
                                        "example": "MC34234",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "user": {
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "example": "MC34234"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "a1b2c3d4"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/deposits": {
            "post": {
                "tags": [
                    "Deposits"
                ],
                "summary": "Create a new deposit",
                "description": "Store a newly created deposit in storage.",
                "operationId": "805576535b7991bb9ff60a13b915be5b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "amount",
                                    "status"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC123456"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1000
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "completed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Deposit created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "deposit_id": {
                                            "type": "string",
                                            "example": "def456"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "example": "MC123456"
                                        },
                                        "amount": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1000
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "completed"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deposits/{deposit_id}/status": {
            "patch": {
                "tags": [
                    "Deposits"
                ],
                "summary": "Update deposit status",
                "description": "Update the status of a deposit.",
                "operationId": "b99645db3f510d27c935a993d564c7d6",
                "parameters": [
                    {
                        "name": "deposit_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "def456"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "completed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Deposit status updated successfully"
                    },
                    "404": {
                        "description": "Deposit not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/leg-balances/{user_id}": {
            "get": {
                "tags": [
                    "Leg Balance"
                ],
                "summary": "Get user's leg balances",
                "description": "Calculate and return the balance for each leg based on completed deposits",
                "operationId": "getLegBalances",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Unique user ID (e.g. MC34234)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Leg balances retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "leg_a_balance": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1500
                                        },
                                        "leg_b_balance": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1200
                                        },
                                        "leg_c_balance": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1800
                                        },
                                        "total_balance": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 4500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/legacy-rewards/{user_id}": {
            "get": {
                "tags": [
                    "LegacyRewards"
                ],
                "summary": "Get user's legacy rewards history",
                "description": "Get history of completed legacy rewards for a user. A legacy reward is created when all three legs reach $45,000.",
                "operationId": "getUserLegacyRewards",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Unique user ID (e.g. MC34234)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Legacy rewards history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "MC34234"
                                                },
                                                "registration_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-01-01"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "legacy_rewards": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-02-19"
                                                    },
                                                    "leg_a_balance": {
                                                        "description": "Total balance of leg A when reward was earned",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 45000
                                                    },
                                                    "leg_b_balance": {
                                                        "description": "Total balance of leg B when reward was earned",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 45000
                                                    },
                                                    "leg_c_balance": {
                                                        "description": "Total balance of leg C when reward was earned",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 45000
                                                    },
                                                    "reward_amount": {
                                                        "description": "Reward amount received",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 15000
                                                    },
                                                    "is_rewarded": {
                                                        "description": "Whether the reward was paid",
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/legacy-rewards/{user_id}/summary": {
            "get": {
                "tags": [
                    "LegacyRewards"
                ],
                "summary": "Get user's legacy rewards summary",
                "description": "Get summary of user's legacy rewards including total rewards and current leg balances",
                "operationId": "getUserLegacyRewardsSummary",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Unique user ID (e.g. MC34234)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Legacy rewards summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_legacy_rewards": {
                                            "description": "Total legacy rewards received",
                                            "type": "number",
                                            "format": "float",
                                            "example": 30000
                                        },
                                        "current_leg_balances": {
                                            "properties": {
                                                "leg_a": {
                                                    "description": "Current balance of leg A",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45000
                                                },
                                                "leg_b": {
                                                    "description": "Current balance of leg B",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45000
                                                },
                                                "leg_c": {
                                                    "description": "Current balance of leg C",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45000
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "last_legacy_reward_date": {
                                            "description": "Date of last legacy reward received",
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-02-19"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/rewards/{user_id}": {
            "get": {
                "tags": [
                    "Rewards"
                ],
                "summary": "Get user's rewards history",
                "description": "Get history of completed leg rewards for a user. A reward is created when all three legs reach $1500.",
                "operationId": "getUserRewards",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Unique user ID (e.g. MC34234)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rewards history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "MC34234"
                                                },
                                                "registration_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-01-01"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "rewards": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-02-19"
                                                    },
                                                    "leg_a_balance": {
                                                        "description": "Total balance of leg A when reward was earned",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1500
                                                    },
                                                    "leg_b_balance": {
                                                        "description": "Total balance of leg B when reward was earned",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1500
                                                    },
                                                    "leg_c_balance": {
                                                        "description": "Total balance of leg C when reward was earned",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1500
                                                    },
                                                    "reward_amount": {
                                                        "description": "Reward amount received",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 500
                                                    },
                                                    "is_rewarded": {
                                                        "description": "Whether the reward was paid",
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "completed_at": {
                                                        "description": "When the reward was completed",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-02-19T00:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/rewards/{user_id}/summary": {
            "get": {
                "tags": [
                    "Rewards"
                ],
                "summary": "Get user's rewards summary",
                "description": "Get summary of user's rewards including total rewards and current leg balances",
                "operationId": "getUserRewardsSummary",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Unique user ID (e.g. MC34234)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rewards summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_rewards": {
                                            "description": "Total rewards received",
                                            "type": "number",
                                            "format": "float",
                                            "example": 1500
                                        },
                                        "current_leg_balances": {
                                            "properties": {
                                                "leg_a": {
                                                    "description": "Current balance of leg A",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1500
                                                },
                                                "leg_b": {
                                                    "description": "Current balance of leg B",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1500
                                                },
                                                "leg_c": {
                                                    "description": "Current balance of leg C",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1500
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "last_reward_date": {
                                            "description": "Date of last reward received",
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-02-19"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Create a new ticket",
                "operationId": "93882881cca9046d8c6ddbbab7309b4b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC34234"
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "Account Issue"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "I cannot access my account"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ticket created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket created successfully"
                                        },
                                        "ticket": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "ticket_id": {
                                                    "type": "string",
                                                    "example": "geg432"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "MC34234"
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Account Issue"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "I cannot access my account"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "open"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/user/{user_id}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get user's tickets",
                "operationId": "820120e6cfb0aeac2c4aa792174aa26d",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user's tickets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tickets": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "ticket_id": {
                                                        "type": "string",
                                                        "example": "geg432"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "example": "MC34234"
                                                    },
                                                    "subject": {
                                                        "type": "string",
                                                        "example": "Account Issue"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "I cannot access my account"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "open"
                                                    },
                                                    "admin_reply": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "admin_replied_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/{ticket_id}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get ticket details",
                "operationId": "710dd3723a7078d147e87e712f33e8a7",
                "parameters": [
                    {
                        "name": "ticket_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ticket": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "ticket_id": {
                                                    "type": "string",
                                                    "example": "geg432"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "MC34234"
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Account Issue"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "I cannot access my account"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "open"
                                                },
                                                "admin_reply": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "admin_replied_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string",
                                                            "example": "MC34234"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/tickets/{ticket_id}/reply": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Admin reply to ticket",
                "operationId": "717204146ea001613fa0e66a6566a68f",
                "parameters": [
                    {
                        "name": "ticket_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reply"
                                ],
                                "properties": {
                                    "reply": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reply added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reply added successfully"
                                        },
                                        "ticket": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "ticket_id": {
                                                    "type": "string",
                                                    "example": "geg432"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "MC34234"
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Account Issue"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "I cannot access my account"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "closed"
                                                },
                                                "admin_reply": {
                                                    "type": "string",
                                                    "example": "We have resolved your issue"
                                                },
                                                "admin_replied_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Delete admin reply from ticket",
                "operationId": "ca05085f42b9823c933a767aad080b02",
                "parameters": [
                    {
                        "name": "ticket_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin reply deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admin reply deleted successfully"
                                        },
                                        "ticket": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "ticket_id": {
                                                    "type": "string",
                                                    "example": "geg432"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "MC34234"
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Account Issue"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "I cannot access my account"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "open"
                                                },
                                                "admin_reply": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "admin_replied_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found"
                    },
                    "400": {
                        "description": "No admin reply to delete"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/tickets": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get all tickets (admin only)",
                "operationId": "5ffc4f4b9eb6b4bd220d46477cee482b",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "open",
                                "close"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all tickets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tickets": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "ticket_id": {
                                                        "type": "string",
                                                        "example": "geg432"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "example": "MC34234"
                                                    },
                                                    "subject": {
                                                        "type": "string",
                                                        "example": "Account Issue"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "I cannot access my account"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "open"
                                                    },
                                                    "admin_reply": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "admin_replied_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "user_id": {
                                                                "type": "string",
                                                                "example": "MC34234"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/by-id/{ticket_id}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get ticket by unique ticket ID",
                "operationId": "6d8b23b06065c31c812d987839f560d1",
                "parameters": [
                    {
                        "name": "ticket_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "geg432"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ticket": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "ticket_id": {
                                                    "type": "string",
                                                    "example": "geg432"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "MC34234"
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Account Issue"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "I cannot access my account"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "open"
                                                },
                                                "admin_reply": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "admin_replied_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string",
                                                            "example": "MC34234"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade": {
            "post": {
                "tags": [
                    "Trade"
                ],
                "summary": "Send trade request to external API and store result",
                "description": "Send trade request to external API and store the result.",
                "operationId": "9a6b0d061dfb9883c4a18f69eaf69fee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "year",
                                    "month",
                                    "level"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC123456"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2024
                                    },
                                    "month": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "level": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trade result stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or failed to fetch result"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/trade/{user_id}": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get trade result for a specific user",
                "description": "Get trade result for a specific user.",
                "operationId": "5d5702c18c81f6a2f5f8e37d0823102e",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MC123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade result retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade result not found"
                    }
                }
            }
        },
        "/api/trades/active": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get all active trades",
                "description": "Get all active trades",
                "operationId": "c2cbeb22d99377bd332ff411b7e894b6",
                "responses": {
                    "200": {
                        "description": "Active trades retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "trades": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/trade/{user_id}/renew": {
            "post": {
                "tags": [
                    "Trade"
                ],
                "summary": "Manually renew a trade for a specific user",
                "description": "Manually renew a trade for a specific user",
                "operationId": "5e17ddcf54ce85193dabac8cd8262582",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MC123456"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "year": {
                                        "type": "integer",
                                        "example": 2024
                                    },
                                    "month": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "level": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trade renewed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "new_file_path": {
                                                    "type": "string"
                                                },
                                                "new_expires_at": {
                                                    "type": "string"
                                                },
                                                "year": {
                                                    "type": "integer"
                                                },
                                                "month": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User or trade not found"
                    },
                    "400": {
                        "description": "Failed to renew trade"
                    }
                }
            }
        },
        "/api/trade/{user_id}/process-daily-profit": {
            "post": {
                "tags": [
                    "Trade"
                ],
                "summary": "Process daily profit for a specific user",
                "description": "Process daily profit for a specific user",
                "operationId": "d0d944e0cddae7c0e03d4d605530df1b",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MC123456"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "date": {
                                        "description": "Specific date to process (optional, defaults to today)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-15"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Daily profit processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "date": {
                                                    "type": "string"
                                                },
                                                "daily_profit_percent": {
                                                    "type": "number"
                                                },
                                                "deposit_balance": {
                                                    "type": "number"
                                                },
                                                "daily_profit_amount": {
                                                    "type": "number"
                                                },
                                                "new_gain_profit": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User or trade not found"
                    },
                    "400": {
                        "description": "No daily report found for the specified date"
                    }
                }
            }
        },
        "/api/users/transfer-capital-to-gain": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Transfer from capital_profit to gain_profit",
                "operationId": "cfecdfb78b94022b37d7f1f8e11ce9a0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "amount"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC123456"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transfer successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "capital_profit": {
                                            "type": "number"
                                        },
                                        "gain_profit": {
                                            "type": "number"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transfer successful"
                                        },
                                        "transfer": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "transfer_id": {
                                                    "type": "string",
                                                    "example": "xyz789"
                                                },
                                                "from_user_id": {
                                                    "type": "string",
                                                    "example": "MC123456"
                                                },
                                                "to_user_id": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "example": 100
                                                },
                                                "from_account": {
                                                    "type": "string",
                                                    "example": "capital_profit"
                                                },
                                                "to_account": {
                                                    "type": "string",
                                                    "example": "gain_profit"
                                                },
                                                "transfer_type": {
                                                    "type": "string",
                                                    "example": "internal"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Transfer from capital_profit to gain_profit"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Insufficient capital_profit or invalid input"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/transfer-to-user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Transfer from your capital_profit or gain_profit to another user's same account",
                "operationId": "f450dea978e668637013c416d1e59ecc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "from_user_id",
                                    "to_user_id",
                                    "amount",
                                    "from_account"
                                ],
                                "properties": {
                                    "from_user_id": {
                                        "type": "string",
                                        "example": "MC123456"
                                    },
                                    "to_user_id": {
                                        "type": "string",
                                        "example": "MC654321"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "from_account": {
                                        "type": "string",
                                        "enum": [
                                            "capital_profit",
                                            "gain_profit"
                                        ],
                                        "example": "capital_profit"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transfer successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "from_user": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "capital_profit": {
                                                    "type": "number"
                                                },
                                                "gain_profit": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "to_user": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "capital_profit": {
                                                    "type": "number"
                                                },
                                                "gain_profit": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Insufficient balance or invalid input"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user profile information",
                "operationId": "75270b17cd590b047d7fa1305b10f64c",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID to get profile for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MC123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "registration_date": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "gain_profit": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "capital_profit": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "deposit_balance": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "level": {
                                            "type": "integer",
                                            "example": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/btc-wallet": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add or update user's BTC wallet address",
                "operationId": "7ba4436aac60f42e08482e603f9e0436",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "btc_wallet"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC123456"
                                    },
                                    "btc_wallet": {
                                        "type": "string",
                                        "example": "bc1q...abc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "BTC wallet saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "string"
                                        },
                                        "btc_wallet": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/transfers": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user transfer history",
                "operationId": "4c70dad9374a33fe338e1575b16038c9",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID to get transfers for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MC123456"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by transfer type (internal/external)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "internal",
                                "external"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transfer history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "transfers": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "from_user_id": {
                                                        "type": "string"
                                                    },
                                                    "to_user_id": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "amount": {
                                                        "type": "number"
                                                    },
                                                    "from_account": {
                                                        "type": "string"
                                                    },
                                                    "to_account": {
                                                        "type": "string"
                                                    },
                                                    "transfer_type": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/tron-wallet": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add or update user's TRON wallet",
                "operationId": "d847febd4da4adedcd4aea42c8da9755",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "address",
                                    "hex_address",
                                    "private_key"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC123456"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "T..."
                                    },
                                    "hex_address": {
                                        "type": "string",
                                        "example": "41..."
                                    },
                                    "private_key": {
                                        "type": "string",
                                        "example": "..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "TRON wallet saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "string"
                                        },
                                        "address": {
                                            "type": "string"
                                        },
                                        "hex_address": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/daily-registrations": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get daily user registration statistics for system growth tracking",
                "operationId": "de6ee47ae027545802f0a1c6ea382029",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for statistics (YYYY-MM-DD format). If not provided, uses the first user's registration date.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for statistics (YYYY-MM-DD format). If not provided, uses current date.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-12-31"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of days to return (default: 30, ignored if start_date is provided)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Daily registration statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statistics": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-01-01"
                                                    },
                                                    "registrations": {
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "cumulative_total": {
                                                        "type": "integer",
                                                        "example": 1250
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "summary": {
                                            "properties": {
                                                "total_registrations": {
                                                    "type": "integer",
                                                    "example": 450
                                                },
                                                "average_daily": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 15
                                                },
                                                "peak_day": {
                                                    "properties": {
                                                        "date": {
                                                            "type": "string",
                                                            "format": "date"
                                                        },
                                                        "registrations": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "growth_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 12.5
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "period": {
                                            "properties": {
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "days_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid date format"
                    }
                }
            }
        },
        "/api/users/{user_id}/hierarchy-history": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user's hierarchy history (when they became subordinates)",
                "operationId": "28e32bdcf60bdf27b43e3a9a6cd9fba2",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID to get hierarchy history for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MC123456"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (active/inactive/all)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "all",
                            "enum": [
                                "active",
                                "inactive",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User hierarchy history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "string"
                                        },
                                        "history": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "parent_user_id": {
                                                        "type": "string"
                                                    },
                                                    "parent_name": {
                                                        "type": "string"
                                                    },
                                                    "joined_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "left_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "duration_days": {
                                                        "type": "integer",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/{user_id}/subordinates-history": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user's subordinates history (when users became their subordinates)",
                "operationId": "473cc7efd7c2011756fc0249a778d1ca",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID to get subordinates history for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MC123456"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (active/inactive/all)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "all",
                            "enum": [
                                "active",
                                "inactive",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for filtering (YYYY-MM-DD format)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for filtering (YYYY-MM-DD format)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-12-31"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User subordinates history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "string"
                                        },
                                        "subordinates": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "subordinate_user_id": {
                                                        "type": "string"
                                                    },
                                                    "subordinate_name": {
                                                        "type": "string"
                                                    },
                                                    "subordinate_email": {
                                                        "type": "string"
                                                    },
                                                    "joined_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "left_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "duration_days": {
                                                        "type": "integer",
                                                        "nullable": true
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "active",
                                                            "inactive"
                                                        ]
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "summary": {
                                            "properties": {
                                                "total_subordinates": {
                                                    "type": "integer"
                                                },
                                                "active_subordinates": {
                                                    "type": "integer"
                                                },
                                                "inactive_subordinates": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/{user_id}/change-parent": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change user's parent (move to different hierarchy)",
                "operationId": "0033fe41340d0c40847132322d87629e",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID to change parent for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MC123456"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "new_parent_user_id"
                                ],
                                "properties": {
                                    "new_parent_user_id": {
                                        "type": "string",
                                        "example": "MC654321"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "User transferred to new parent"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User parent changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "old_parent_user_id": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "new_parent_user_id": {
                                            "type": "string"
                                        },
                                        "changed_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parent or user not found"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/hierarchy": {
            "get": {
                "tags": [
                    "User Hierarchy"
                ],
                "summary": "Get all users with their hierarchy",
                "operationId": "cfab23975b5f7c5779334f730be5567a",
                "responses": {
                    "200": {
                        "description": "List of users with their hierarchy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "user_id": {
                                                "type": "string",
                                                "example": "MC34234"
                                            },
                                            "sub_users": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string",
                                                            "example": "MC34235"
                                                        },
                                                        "sub_users": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "user_id": {
                                                                        "type": "string",
                                                                        "example": "MC34236"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}/sub-users": {
            "get": {
                "tags": [
                    "User Hierarchy"
                ],
                "summary": "Get sub-users of a specific user",
                "operationId": "85626e48c065acaddce41541a62ca842",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID to get sub-users for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sub-users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "user_id": {
                                                "type": "string",
                                                "example": "MC34234"
                                            },
                                            "sub_users": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string",
                                                            "example": "MC34235"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/withdrawal-requests": {
            "post": {
                "tags": [
                    "Withdrawal Requests"
                ],
                "summary": "Create a new withdrawal request",
                "operationId": "48af5b8da7650cff257f454150559c6c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "wallet_address",
                                    "amount_usd",
                                    "amount_btc"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "example": "MC-123456"
                                    },
                                    "wallet_address": {
                                        "type": "string",
                                        "example": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa"
                                    },
                                    "amount_usd": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "amount_btc": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.00123456
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Monthly withdrawal"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Withdrawal request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Withdrawal request created successfully"
                                        },
                                        "withdrawal_request": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "withdrawal_id": {
                                                    "type": "string",
                                                    "example": "abc123"
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "MC-123456"
                                                },
                                                "wallet_address": {
                                                    "type": "string",
                                                    "example": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa"
                                                },
                                                "amount_usd": {
                                                    "type": "number",
                                                    "example": 100
                                                },
                                                "amount_btc": {
                                                    "type": "number",
                                                    "example": 0.00123456
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "example": "Monthly withdrawal"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "in_process"
                                                },
                                                "transaction_hash": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/withdrawal-requests/{user_id}": {
            "get": {
                "tags": [
                    "Withdrawal Requests"
                ],
                "summary": "Get user's withdrawal requests",
                "operationId": "efc7ee5c6e30a32bf6edaea1aa536689",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user's withdrawal requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "withdrawal_requests": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "withdrawal_id": {
                                                        "type": "string",
                                                        "example": "abc123"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "example": "MC-123456"
                                                    },
                                                    "wallet_address": {
                                                        "type": "string",
                                                        "example": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa"
                                                    },
                                                    "amount_usd": {
                                                        "type": "number",
                                                        "example": 100
                                                    },
                                                    "amount_btc": {
                                                        "type": "number",
                                                        "example": 0.00123456
                                                    },
                                                    "comment": {
                                                        "type": "string",
                                                        "example": "Monthly withdrawal"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "in_process"
                                                    },
                                                    "transaction_hash": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/withdrawal-requests/{request_id}/update-status": {
            "post": {
                "tags": [
                    "Withdrawal Requests"
                ],
                "summary": "Update withdrawal request status",
                "operationId": "500decbb6dc8345840cd6e81c6ca2778",
                "parameters": [
                    {
                        "name": "request_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "in_queue",
                                            "in_process",
                                            "completed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status updated successfully"
                    },
                    "404": {
                        "description": "Request not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/withdrawal-requests/{request_id}/add-transaction-hash": {
            "post": {
                "tags": [
                    "Withdrawal Requests"
                ],
                "summary": "Add transaction hash to withdrawal request",
                "operationId": "36950c840d2734872fb1dfa2943c693f",
                "parameters": [
                    {
                        "name": "request_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "transaction_hash"
                                ],
                                "properties": {
                                    "transaction_hash": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction hash added successfully"
                    },
                    "400": {
                        "description": "Cannot update completed request or insufficient balance"
                    },
                    "404": {
                        "description": "Request not found or user not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/withdrawal-requests": {
            "get": {
                "tags": [
                    "Withdrawal Requests"
                ],
                "summary": "Get all withdrawal requests (admin only)",
                "operationId": "1d1ffa96db18d7416548973c1a9987ba",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "in_queue",
                                "in_process",
                                "completed"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all withdrawal requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "withdrawal_requests": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "withdrawal_id": {
                                                        "type": "string",
                                                        "example": "abc123"
                                                    },
                                                    "user_id": {
                                                        "type": "string",
                                                        "example": "MC-123456"
                                                    },
                                                    "wallet_address": {
                                                        "type": "string",
                                                        "example": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa"
                                                    },
                                                    "amount_usd": {
                                                        "type": "number",
                                                        "example": 100
                                                    },
                                                    "amount_btc": {
                                                        "type": "number",
                                                        "example": 0.00123456
                                                    },
                                                    "comment": {
                                                        "type": "string",
                                                        "example": "Monthly withdrawal"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "in_process"
                                                    },
                                                    "transaction_hash": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "user_id": {
                                                                "type": "string",
                                                                "example": "MC-123456"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Error message here"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "API Endpoints for admin management"
        },
        {
            "name": "Leg Balance",
            "description": "API Endpoints for managing user leg balances"
        },
        {
            "name": "LegacyRewards",
            "description": "API Endpoints for managing user legacy rewards"
        },
        {
            "name": "Rewards",
            "description": "API Endpoints for managing user rewards"
        },
        {
            "name": "Tickets",
            "description": "API Endpoints for managing support tickets"
        },
        {
            "name": "User Hierarchy",
            "description": "API Endpoints for user hierarchy management"
        },
        {
            "name": "Withdrawal Requests",
            "description": "API Endpoints for managing withdrawal requests"
        },
        {
            "name": "Vouchers",
            "description": "Vouchers"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Deposits",
            "description": "Deposits"
        },
        {
            "name": "Trade",
            "description": "Trade"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}